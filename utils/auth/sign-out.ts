'use client'

import Cookies from 'js-cookie'

export async function signOut(): Promise<{ message: string }> {
	try {
		console.log('üì§ [signOut] Sending POST /v1/users/logout')
		
		// –ò–∑–≤–ª–µ–∫–∞–µ–º auth_token –∏–∑ –∫—É–∫–∏
		const authToken = Cookies.get('auth_token')
		console.log('üîç [signOut] auth_token:', authToken || 'Not found')
		
		if (!authToken) {
			console.error('‚ùå [signOut] No auth_token found')
			throw new Error('No auth_token found')
		}
		
		const headers = {
			'Content-Type': 'application/json',
			'Authorization': `Bearer ${authToken}`,
		}
		console.log('üìã [signOut] Request headers:', headers)
		
		const response = await fetch(
			`${process.env.NEXT_PUBLIC_SERVER_URL}/v1/users/logout`,
			{
				method: 'POST',
				credentials: 'include', // –î–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ refresh_token (HttpOnly)
				headers,
			}
		)
		
		if (!response.ok) {
			const errorText = await response.text()
			console.error('‚ùå [signOut] Server error:', response.status, errorText)
			throw new Error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ: ${response.status}`)
		}
		
		const data = await response.json()
		console.log('‚úÖ [signOut] Response:', data)
		
		// –£–¥–∞–ª—è–µ–º auth_token –∏–∑ –∫—É–∫–∏ –Ω–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–µ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ, —Ç–∞–∫ –∫–∞–∫ —Å–µ—Ä–≤–µ—Ä –æ—á–∏—â–∞–µ—Ç)
		// Cookies.remove('auth_token')
		return data as { message: string }
	} catch (error) {
		console.error('‚ùå [signOut] Error:', error)
		throw error
	}
}
